trigger:
  - main

pr:
  - main

variables:
  - name: PublisherId
    value: "BoostSecurity"
  - name: ServiceName
    value: "boostsec-azure-pipeline-publisher"

stages:
  - stage: Run_and_publish_unit_tests
    jobs:
      - job:
        steps:
          - task: TfxInstaller@4
            inputs:
              version: "v0.x"
          - task: Npm@1
            displayName: Install npm packages
            inputs:
              command: "install"
              workingDir: "source"
          - task: Bash@3
            displayName: Compile Package
            inputs:
              targetType: "inline"
              script: |
                make test.ci
          - task: PublishTestResults@2
            inputs:
              testResultsFormat: "JUnit"
              testResultsFiles: "junit.xml"
  - stage: Package_extension_and_publish_build_artifacts
    variables:
      - name: ExtensionId
        value: "BoostSecurityScanDev"
      - name: ExtensionName
        value: "BoostSecurity Scanner Dev"
      - name: ManifestFile
        value: "vss-extension.dev.json"
    jobs:
      - job:
        steps:
          - task: TfxInstaller@4
            inputs:
              version: "v0.x"
          - task: Npm@1
            displayName: Install npm packages
            inputs:
              command: "install"
              workingDir: "source"
          - task: Bash@3
            displayName: Compile Package
            inputs:
              targetType: "inline"
              script: |
                make build
          - task: QueryAzureDevOpsExtensionVersion@4
            name: QueryVersion
            inputs:
              connectTo: "VsTeam"
              connectedServiceName: $(ServiceName)
              publisherId: "$(PublisherId)"
              extensionId: "$(ExtensionId)"
              versionAction: "Patch"
          - task: PackageAzureDevOpsExtension@4
            inputs:
              rootFolder: "$(System.DefaultWorkingDirectory)"
              patternManifest: "$(ManifestFile)"
              publisherId: "$(PublisherId)"
              extensionId: "$(ExtensionId)"
              extensionName: "$(ExtensionName)"
              extensionVersion: "$(QueryVersion.Extension.Version)"
              updateTasksVersion: true
              updateTasksVersionType: "patch"
              extensionVisibility: "private" # Change to public if you"re publishing to the marketplace
              extensionPricing: "free"
          - task: CopyFiles@2
            displayName: "Copy Files to: $(Build.ArtifactStagingDirectory)"
            inputs:
              Contents: "**/*.vsix"
              TargetFolder: "$(Build.ArtifactStagingDirectory)"
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: "$(Build.ArtifactStagingDirectory)"
              ArtifactName: "$(ExtensionId)"
              publishLocation: "Container"
  - stage: Download_build_artifacts_and_publish_the_extension
    variables:
      - name: ExtensionId
        value: "BoostSecurityScanDev"
      - name: ExtensionName
        value: "BoostSecurity Scanner Dev"
    jobs:
      - job:
        steps:
          - task: TfxInstaller@4
            inputs:
              version: "v0.x"
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: "current"
              downloadType: "single"
              artifactName: "$(ExtensionId)"
              downloadPath: "$(System.DefaultWorkingDirectory)"
          - task: PublishAzureDevOpsExtension@4
            inputs:
              connectTo: "VsTeam"
              connectedServiceName: "$(ServiceName)"
              fileType: "vsix"
              vsixFile: "$(ExtensionId)/$(PublisherId).$(ExtensionId)-*.vsix"
              publisherId: "$(PublisherId)"
              extensionId: "$(ExtensionId)"
              extensionName: "$(ExtensionName)"
              updateTasksVersion: false
              extensionVisibility: "private" # Change to public if you"re publishing to the marketplace
              extensionPricing: "free"
          - task: Bash@3
            displayName: Sleep 60
            inputs:
              targetType: "inline"
              script: |
                # add a delay waiting for the extension to propagate
                sleep 60
  - stage: Validate_plugin
    variables:
      - group: boost-prod
      - name: api_token
        value: $[variables.BOOST_API_TOKEN]
    jobs:
      - job:
        steps:
          - task: BoostSecurityScanDev@0
            inputs:
              apiToken: $(api_token)
              registryModule: boostsecurityio/native-scanner
